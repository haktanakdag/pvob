<?php
    namespace System\Core;

    abstract Class Model{
        protected $db;
        private static $connection;

        final private function connect()
        {
            if ( self::$connection ) return self::$connection;

            $db = [
                "database_type" => DB_CONNECTION,
                "database_name" => DB_DATABASE,
                "server" => DB_HOST,
                "port" => DB_PORT,
                "username" => DB_USERNAME,
                "password" => DB_PASSWORD,
                "charset" => DB_CHARSET
            ];

            try
            {
                return self::$connection = new Medoo($db);
            }
            catch( Exception $e )
            {
                exit($e->getMessage());
            }
        }
        
        public function Query($qry, $params = []){
      
            if(empty($params)){
     
             $this->result = $this->con->prepare($qry);
             return $this->result->execute();
     
            } else {
                $this->result = $this->con->prepare($qry);
                return $this->result->execute($params);
            }
     
         }
     
         public function rowCount(){
     
             return $this->result->rowCount();
     
         }
     
         public function fetchall(){
     
             return $this->result->fetchAll(PDO::FETCH_OBJ);
     
         }
     
         public function fetch(){
     
             return $this->result->fetch(PDO::FETCH_OBJ);
     
         }

        public function __construct()
        {
            $this->db = $this->connect();;
        }

        public function errorMessage(){
            return $this->db->error()[2];
        }

        public function lastQuery(){
            return $this->db->last();
        }
    }
